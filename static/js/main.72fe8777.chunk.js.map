{"version":3,"sources":["components/Misc/GeneratedIconElement.tsx","components/Demographics/ContactMethod.tsx","components/Misc/Section.tsx","components/Demographics/Biography.tsx","components/Experience/ExperiencePosition.tsx","components/Experience/ExperienceCompany.tsx","components/Experience/Experience.tsx","components/Education/EducationMilestone.tsx","components/Education/EducationHistory.tsx","components/Technology/Proficiency.tsx","components/Technology/TechnologySummary.tsx","components/Contribution/ContributionItem.tsx","components/Contribution/ContributionSummary.tsx","components/Demographics/Models/BiographyModel.tsx","data/DataModel.tsx","data/DataGetter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["eyeConsKVP","Object","entries","eyeCons","sort","a","b","toLowerCase","GenerateIcon","name","match","filter","itm","startsWith","Array","length","GeneratedIcon","fallback","ContactMethod","info","React","useState","eventTimer","setEventTimer","showFull","setShowFull","snackType","setSnackType","anchorEl","setAnchorEl","openSnack","Boolean","handleTrigger","event","preventDefault","show","clearTimeout","type","triggered","setTimeout","currentTarget","target","window","isSecureContext","navigator","clipboard","writeText","ClipboardText","then","open","Link","MethodName","Box","displayPrint","Grid","item","style","cursor","userSelect","msUserSelect","container","spacing","alignContent","justify","onMouseDown","onMouseUp","onPointerDown","onPointerUp","onPointerLeave","display","alignItems","flexWrap","ButtonBase","Icon","Popover","transformOrigin","vertical","horizontal","Typography","variant","margin","DisplayText","Snackbar","anchorOrigin","message","autoHideDuration","onClose","paddingRight","Section","props","theme","useTheme","styles","makeStyles","root","flexGrow","overflow","padded100","padding","height","xs","sm","md","lg","xl","className","Paper","title","paddingBottom","Container","children","pl","color","palette","dark","Biography","large","width","marginTop","textAlign","textTransform","blurb","fontStyle","fontSize","contact","getFullName","FirstName","MiddleName","trim","LastName","paddingTop","Avatar","alt","src","PhotoUrl","direction","isArray","Contact","map","index","toString","Blurb","id","toUpperCase","Divider","ExperiencePosition","duration","breakpoints","down","listItems","Duties","push","Achievements","Title","From","To","Notes","marginBottom","ExperienceCompany","CompanyName","Description","undefined","Roles","pos","Experience","history","companies","company","EducationMilestone","getDateRange","dr","hasFrom","String","hasTo","Hidden","xsDown","Authority","smUp","Text","EducationHistory","education","edu","Proficiency","proficiencyLabels","0.5","label","backgroundColor","grey","primary","1.5","secondary","light","2.5","3.5","4.5","getLabel","value","closetValue","from","keys","e","Number","reduce","pv","cv","Level","xsValue","setXsValue","isPrint","setIsPrint","addEventListener","specialXs","useMediaQuery","json2mq","maxWidth","inline","component","Rating","precision","readOnly","size","max","useEffect","smDown","TechnologySummary","proficiencies","prof","p","i","ContributionItem","ListItem","href","underline","ContributionSummary","setXs","contributions","List","c","Contribution","BiographyModel","init","assign","this","DataModel","obj","Demographics","Education","Proficiencies","Certifications","DataGetter","url","dataUrl","axios","get","Math","round","Date","now","x","status","doc","yaml","load","data","catch","console","log","createTheme","createMuiTheme","dg","appProps","loaded","dataModel","App","prefersDarkMode","passive","state","setState","Get","CssBaseline","content","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAGMA,EAAaC,OACdC,QAAQC,GACRC,MAAK,SAACC,EAAEC,GACL,OAAOD,EAAE,GAAGE,cAAgBD,EAAE,GAAGC,cAC3B,GACC,KAGA,SAASC,EAAaC,GAAY,IAAD,IACtCC,EAAK,UAAGV,EAAWW,QAAO,SAACC,GAAS,IAAD,EACrC,OAAOA,EAAI,GAAGL,cAAcM,WAArB,iBAAgCJ,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAMF,qBAAtC,QAAuD,cADvD,QAEL,IAAIO,MAEV,GAA6B,KAAzB,iBAACJ,QAAD,IAACA,OAAD,EAACA,EAAOK,cAAR,QAAkB,GAClB,OAAQ,iCAASN,IAGrB,IAAMO,EAAgBN,EAAM,GAAG,GAE/B,OACI,cAAC,WAAD,CAAUO,SAAU,8CAApB,SACI,cAACD,EAAD,MCnBG,SAASE,EAAcC,GAA2B,IAAD,EACxBC,IAAMC,SAAgC,MADd,mBACrDC,EADqD,KACzCC,EADyC,OAE5BH,IAAMC,UAAS,GAFa,mBAErDG,EAFqD,KAE3CC,EAF2C,OAG1BL,IAAMC,SAAwB,MAHJ,mBAGrDK,EAHqD,KAG1CC,EAH0C,OAI5BP,IAAMC,SAAyB,MAJH,mBAIrDO,EAJqD,KAI3CC,EAJ2C,KAMxDC,EAAYC,QAAsB,OAAdL,GAElBM,EAAgB,SAACC,GACnBA,EAAMC,iBAGN,IAAMC,EAAOX,EAYb,GATIF,IACAc,aAAad,GACbC,EAAc,MACdE,GAAY,GACZI,EAAY,OAKG,iBAAfI,EAAMI,KAAV,CAIA,IAAMC,EAAYP,QAAQE,IACP,cAAfA,EAAMI,MACS,gBAAfJ,EAAMI,OAENC,IAAcH,EAGdZ,EAAcgB,YAAW,WAAO,IAAD,EAC3BV,EAAW,UAACI,EAAMO,qBAAP,QAAwBP,EAAMQ,QACzChB,GAAY,GACTiB,OAAOC,gBACNC,UAAUC,UAAUC,UAAU3B,EAAK4B,eAC9BC,MAAK,WACFrB,EAAa,cACd,WACCA,EAAa,cAGrBA,EAAa,aAIlB,MACKW,GAAcH,GAGtBO,OAAOO,KAAK9B,EAAK+B,KAAM/B,EAAKgC,cAIpC,OACI,qCACI,cAACC,EAAA,EAAD,CAAKC,aAAa,OAAlB,SACI,eAACC,EAAA,EAAD,CAAMC,MAAI,EACJC,MAAO,CACHC,OAAO,UACPC,WAAW,OACXC,aAAa,QAJvB,UAOI,cAACL,EAAA,EAAD,CACIM,WAAS,EACTC,QAAS,EACTC,aAAa,SACbC,QAAQ,SACRC,YAAahC,EACbiC,UAAWjC,EACXkC,cAAelC,EACfmC,YAAanC,EACboC,eAAgBpC,EATpB,SAUI,eAACsB,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CACda,QAAS,OACTC,WAAY,SACZC,SAAU,QAHd,UAKI,cAACC,EAAA,EAAD,UAAahE,EAAaW,EAAKsD,QAE/B,cAACC,EAAA,EAAD,CACIzB,KAAMzB,EACNI,SAAUA,EACV+C,gBAAiB,CACbC,SAAU,GACVC,WAAY,GALpB,SAQI,cAACC,EAAA,EAAD,CACIC,QAAQ,WACRvB,MAAO,CACHwB,OAAQ,MACRvB,OAAQ,WAJhB,SAOKtC,EAAK8D,qBAMtB,cAACC,EAAA,EAAD,CACIC,aAAc,CAACP,SAAU,MAAOC,WAAY,UAC5C5B,KAAMnB,EACNsD,QAAwB,YAAd1D,GAA2BI,EAC/B,2CACc,YAAdJ,GAA2BI,EACvB,mDACA,KAEVuD,iBAAkB,IAClBC,QAAS,WACL/C,YAAW,kBAAMZ,EAAa,QAAO,OAHpCR,EAAKgC,iBAQtB,cAACC,EAAA,EAAD,CAAKiB,QAAQ,OAAOhB,aAAa,QAAjC,SACI,eAACC,EAAA,EAAD,CAAMM,WAAS,EAACL,MAAI,EAACC,MAAO,CAAC+B,aAAc,SAA3C,UACI,cAACjC,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAC+B,aAAc,UAAjC,SACC/E,EAAaW,EAAKsD,QAEnB,cAACnB,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAC+B,aAAc,SAAjC,SACI,cAACT,EAAA,EAAD,UAAa3D,EAAK8D,wB,8BCxH3B,SAASO,EAAQC,GAC5B,IAAMC,EAAQC,cACRC,EAASC,aAAW,SAACH,GAAD,MAAY,CAClCI,KAAM,CACFC,SAAU,EACVC,SAAU,UAEdC,UAAW,CACPC,QAAQ,GAAD,OAAKR,EAAM7B,QAAQ,GAAnB,MACPsC,OAAQ,WAPDN,GAWf,OACI,eAACvC,EAAA,EAAD,CAAMC,MAAI,EACJ6C,GAAIX,EAAMW,IAAM,OAChBC,GAAIZ,EAAMY,IAAM,OAChBC,GAAIb,EAAMa,IAAM,OAChBC,GAAId,EAAMc,IAAM,OAChBC,GAAIf,EAAMe,IAAM,OALtB,UAOI,cAACpD,EAAA,EAAD,CAAKC,aAAa,OAAOoD,UAAWb,EAAOK,UAA3C,SACI,eAACS,EAAA,EAAD,CAAOD,UAAWb,EAAOK,UAAzB,UACMR,EAAMkB,OACJ,cAAC7B,EAAA,EAAD,CACIC,QAAQ,KACRvB,MAAO,CACHuC,SAAU,EACVa,cAAe,UAJvB,SAOKnB,EAAMkB,QAGf,cAACE,EAAA,EAAD,UAAYpB,EAAMqB,gBAG1B,cAAC1D,EAAA,EAAD,CACIiB,QAAQ,OACRhB,aAAa,QAFjB,SAIQ,eAACD,EAAA,EAAD,CAAK2D,GAAG,MAAR,UACI,cAACjC,EAAA,EAAD,CACIC,QAAQ,KACRvB,MAAO,CACHwD,MAAOtB,EAAMuB,QAAQ9F,KAAK+F,KAC1BN,cAAe,UAJvB,SAOCnB,EAAMkB,QAEP,cAACE,EAAA,EAAD,UACKpB,EAAMqB,mBCrDpB,SAASK,EAAU1B,GAC9B,IAAMC,EAAQC,cACRC,EAASC,aAAW,SAACH,GAAD,MAAY,CAClC0B,MAAO,CACHC,MAAO3B,EAAM7B,QAAQ,IACrBsC,OAAQT,EAAM7B,QAAQ,IACtBmB,OAAQ,OACRsC,UAAW,SAEf7G,KAAM,CACF8G,UAAW,SACXC,cAAe,aAEnBC,MAAO,CACHvB,QAAS,MACTwB,UAAW,SACXC,SAAU,UACVJ,UAAW,UAEfK,QAAS,CACLvD,QAAS,OACT,QAAS,CACLW,OAAQU,EAAM7B,QAAQ,QApBnBgC,GAyBf,SAASgC,IACL,MAAO,UAAGpC,EAAMtE,KAAK2G,UAAd,YAA2BrC,EAAMtE,KAAK4G,YAAaC,OAAnD,WACIvC,EAAMtE,KAAK8G,UAG1B,OACI,qCACI,cAAC7E,EAAA,EAAD,CAAKI,MAAO,CAAC0E,WAAY,QAAS7E,aAAa,OAA/C,SACI,cAACmC,EAAD,UACI,eAAClC,EAAA,EAAD,CACIM,WAAS,EACTG,QAAQ,SAFZ,UAII,cAACT,EAAA,EAAD,CACIC,MAAI,EACJ6C,GAAI,GAFR,SAII,cAAC+B,EAAA,EAAD,CACIC,IAAKP,IACLQ,IAAK5C,EAAMtE,KAAKmH,SAChB7B,UAAWb,EAAOwB,UAE1B,cAAC9D,EAAA,EAAD,CACIC,MAAI,EACJ6C,GAAI,GACJK,UAAWb,EAAOnF,KAHtB,SAKI,cAACqE,EAAA,EAAD,CACIC,QAAQ,KADZ,SAEE8C,QAEN,cAACvE,EAAA,EAAD,CACIM,WAAS,EACT2E,UAAU,MACVxE,QAAQ,SACRD,aAAa,SACb2C,UAAWb,EAAOgC,QALtB,SAOO9G,MAAM0H,QAAQ/C,EAAMtE,KAAKsH,UACxBhD,EAAMtE,KAAKsH,QAAQC,KAAI,SAACd,EAASe,GACjC,OACI,cAACzH,EAAD,CAEIgC,KAAM0E,EAAQ1E,KACdC,WAAYyE,EAAQzE,WACpB8B,YAAa2C,EAAQ3C,YACrBR,KAAMmD,EAAQnD,KACd1B,cAAe6E,EAAQ7E,eALlB4F,EAAMC,iBAU3B,cAACtF,EAAA,EAAD,CACIC,MAAI,EACJkD,UAAWb,EAAO6B,MAFtB,SAII,cAAC3C,EAAA,EAAD,UAAaW,EAAMtE,KAAK0H,iBAKxC,eAACzF,EAAA,EAAD,CACK0F,GAAG,KACHzE,QAAQ,OACRhB,aAAa,QAHlB,UAKI,eAACC,EAAA,EAAD,CAAMM,WAAS,EAAf,UACI,cAACN,EAAA,EAAD,CAAMC,MAAI,EAAC6C,GAAI,GAAIE,GAAI,GAAvB,SACI,cAACxB,EAAA,EAAD,CACIC,QAAQ,KACRvB,MAAO,CAACwD,MAAOtB,EAAMuB,QAAQ9F,KAAK+F,MAFtC,SAGKW,IAAckB,kBAGvB,cAACzF,EAAA,EAAD,CAAMM,WAAS,EAACL,MAAI,EAAC6C,GAAI,GAAIE,GAAI,GAAjC,SACQxF,MAAM0H,QAAQ/C,EAAMtE,KAAKsH,UACzBhD,EAAMtE,KAAKsH,QAAQC,KAAI,SAACd,EAASe,GACjC,OACI,cAACzH,EAAD,CAEIgC,KAAM0E,EAAQ1E,KACdC,WAAYyE,EAAQzE,WACpB8B,YAAa2C,EAAQ3C,YACrBR,KAAMmD,EAAQnD,KACd1B,cAAe6E,EAAQ7E,eALlB4F,EAAMC,oBAW/B,cAACI,EAAA,EAAD,U,oBC7HD,SAASC,EAAmBxD,GAAyB,IAAD,IACzDG,EAASC,aAAW,SAACH,GAAD,MAAY,CAClCI,KAAM,GAENoD,SAAS,aACL3B,UAAW,SACV7B,EAAMyD,YAAYC,KAAK,MAAQ,CAC5B7B,UAAW,YANR1B,GAYTwD,EAAY,IAAIvI,MAStB,OAPIA,MAAM0H,QAAQ/C,EAAM6D,SACpBD,EAAUE,KAAV,MAAAF,EAAS,YAAS5D,EAAM6D,SAExBxI,MAAM0H,QAAQ/C,EAAM+D,eACpBH,EAAUE,KAAV,MAAAF,EAAS,YAAS5D,EAAM+D,eAIxB,mCAAE,gCACE,eAAClG,EAAA,EAAD,CAAMC,MAAI,EAACK,WAAS,EAACwC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzD,UACI,eAACpD,EAAA,EAAD,CAAKC,aAAa,OAAOgB,QAAQ,WAAWb,MAAO,CAAC6D,MAAO,QAA3D,UACI,cAAC/D,EAAA,EAAD,CAAMC,MAAI,EAAC+C,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAA7B,SACI,cAACtB,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAgC,iCAASU,EAAMgE,YAEnD,cAACnG,EAAA,EAAD,CAAMC,MAAI,EAAC+C,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAA7B,SACI,eAACtB,EAAA,EAAD,CAAYC,QAAQ,YAAY0B,UAAWb,EAAOsD,SAAlD,UAA6DzD,EAAMiE,KAAnE,MAA4EjE,EAAMkE,WAG1F,eAACvG,EAAA,EAAD,CAAKC,aAAa,WAAWgB,QAAQ,OAArC,UACI,cAACf,EAAA,EAAD,CAAMC,MAAI,EAAC6C,GAAI,EAAf,SACQ,cAACtB,EAAA,EAAD,CAAYC,QAAQ,YAApB,SACI,iCAASU,EAAMgE,YAG3B,cAACnG,EAAA,EAAD,CAAMC,MAAI,EAAC6C,GAAI,EAAf,SACQ,eAACtB,EAAA,EAAD,CAAYC,QAAQ,YAAYvB,MAAO,CAAC+D,UAAU,SAAlD,UACK9B,EAAMiE,KADX,MACoBjE,EAAMkE,eAMjC,OAALlE,QAAK,IAALA,GAAA,UAAAA,EAAOmE,aAAP,mBAAc5B,cAAd,eAAsBjH,QAAS,GAC/B,cAACuC,EAAA,EAAD,CAAMC,MAAI,EAAC8C,GAAI,GAAID,GAAI,GAAvB,SACI,cAACtB,EAAA,EAAD,CAAYC,QAAQ,YAAYvB,MAAO,CAACmE,SAAU,WAAlD,SACKlC,EAAMmE,UAIjBP,GAAaA,EAAUtI,OAAS,GAClC,cAACuC,EAAA,EAAD,CAAMC,MAAI,EAAC6C,GAAI,GAAf,SACI,cAACtB,EAAA,EAAD,CACIC,QAAQ,QADZ,SAEA,oBAAIvB,MAAO,CAAC8D,UAAW,SAAUuC,aAAc,SAA/C,SAEKR,EAAUX,KAAI,SAACnF,EAAMoF,GAClB,OAAO,6BAAiBpF,GAARoF,iBC5DzB,SAASmB,EAAkBrE,GACtC,OACI,eAACnC,EAAA,EAAD,CAAMC,MAAI,EAAC6C,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/C,UACI,cAAC1B,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BU,EAAMsE,cAChC,cAACjF,EAAA,EAAD,CAAYC,QAAQ,YAAYiC,MAAM,gBAAtC,SAAuDvB,EAAMuE,mBACzCC,IAAhBxE,EAAMyE,OACNzE,EAAMyE,MAAMxB,KAAK,SAACyB,EAAKxB,GACnB,OAEI,cAACM,EAAD,CACoBQ,MAAOU,EAAIV,MACXC,KAAMS,EAAIT,KACVC,GAAIQ,EAAIR,GACRL,OAAQa,EAAIb,OACZE,aAAcW,EAAIX,aAClBI,MAAOO,EAAIP,OANNjB,SCLlC,SAASyB,EAAWC,GAC/B,YAA0BJ,IAAtBI,EAAQC,UACD,6BAIH,cAAC9E,EAAD,CACImB,MAAM,aACNP,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAFxC,SAIK6D,EAAQC,UAAU5B,KAAI,SAAC6B,EAAS5B,GACzB,OACI,cAACmB,EAAD,CAEAE,YAAaO,EAAQP,YACrBD,YAAaQ,EAAQR,YACrBG,MAAOK,EAAQL,OAHVvB,Q,wDClBlB,SAAS6B,EAAmBrJ,GACvC,IAAMyE,EAASC,aAAW,iBAAO,CAC7BC,KAAM,GAENoD,SAAU,CACN3B,UAAW,YAJJ1B,GAQf,SAAS4E,IACL,IAIa,EAQH,EAZNC,EAAK,GACHC,EAAU5I,QAAQZ,EAAKuI,MAAQkB,OAAOzJ,EAAKuI,MAAM1B,OAAOjH,OAAS,GACjE8J,EAAQ9I,QAAQZ,EAAKwI,IAAMiB,OAAOzJ,EAAKwI,IAAI3B,OAAOjH,OAAS,GAE7D4J,IACAD,EAAE,iBAAGvJ,QAAH,IAAGA,OAAH,EAAGA,EAAMuI,YAAT,QAAiB,KAGnBiB,GAAWE,IACXH,GAAM,OAGNG,KACAH,GAAE,iBAAIvJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAMwI,UAAV,QAAgB,IAGtB,OAAOe,EAGX,OACI,eAACpH,EAAA,EAAD,CAAMM,WAAS,EAAf,UACI,cAACN,EAAA,EAAD,CAAMC,MAAI,EAAC+C,GAAI,GAAID,GAAI,GAAID,GAAI,GAA/B,SACI,cAACtB,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAgC,iCAAS5D,EAAKsI,YAElD,cAACqB,EAAA,EAAD,CAAQC,QAAQ,EAAhB,SACI,cAACzH,EAAA,EAAD,CAAMC,MAAI,EAAC+C,GAAI,EAAGD,GAAI,EAAtB,SACI,cAACvB,EAAA,EAAD,CAAYC,QAAQ,YAAY0B,UAAWb,EAAOsD,SAAlD,SAA6DuB,UAGrE,cAACnH,EAAA,EAAD,CAAMC,MAAI,EAAC+C,GAAI,GAAIF,GAAI,EAAvB,SACI,cAACtB,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6B5D,EAAK6J,cAEtC,cAACF,EAAA,EAAD,CAAQG,MAAM,EAAd,SACI,cAAC3H,EAAA,EAAD,CAAMC,MAAI,EAAC6C,GAAI,EAAf,SACI,cAACtB,EAAA,EAAD,CAAaC,QAAQ,QAAQ0B,UAAWb,EAAOsD,SAA/C,SAA0DuB,UAIlE,cAACnH,EAAA,EAAD,CAAMC,MAAI,EAAC+C,GAAI,GAAID,GAAI,GAAID,GAAI,GAA/B,SACI,cAACtB,EAAA,EAAD,UAAY,sBAAMtB,MAAO,CAACmE,SAAU,WAAxB,SAAqCxG,EAAK+J,cC3CvD,SAASC,EAAiBC,GACrC,YAA4BnB,IAAxBmB,EAAUA,UACH,6BAIP,cAAC5F,EAAD,CACImB,MAAM,YACNP,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAFxC,SAIK4E,EAAUA,UAAU1C,KAAI,SAAC2C,EAAK1C,GAC3B,OAAQ,cAAC6B,EAAD,CAEJQ,UAAWK,EAAIL,UACftB,KAAM2B,EAAI3B,KACVC,GAAI0B,EAAI1B,GACRF,MAAO4B,EAAI5B,MACXyB,KAAMG,EAAIH,MALLvC,Q,+CCdV,SAAS2C,EAAYnK,GAChC,IAAMuE,EAAQC,cAER4F,EAA8C,CAChDC,GAAK,CACDC,MAAO,SACPC,gBAAiBC,IAAK,IACtB3E,MAAOtB,EAAMuB,QAAQ2E,SAEzBC,IAAK,CACDJ,MAAO,WACPC,gBAAiBhG,EAAMuB,QAAQ6E,UAAUC,OAE7CC,IAAK,CACDP,MAAO,YACPC,gBAAiBhG,EAAMuB,QAAQ6E,UAAU5E,MAE7C+E,IAAK,CACDR,MAAO,aACPC,gBAAiBhG,EAAMuB,QAAQ2E,QAAQG,OAE3CG,IAAK,CACDT,MAAO,SACPC,gBAAiBhG,EAAMuB,QAAQ2E,QAAQ1E,OAgB/C,SAASiF,IACL,IAAIC,EACEC,EAbOvL,MAAMwL,KAAKrM,OAAOsM,KAAKhB,IAAoB,SAACiB,GACrD,OAAOC,OAAOD,MACfpM,OAESsM,QAAO,SAACC,EAAIC,GACpB,OAAOzL,EAAK0L,OAASD,EACfA,EACAD,KAWV,OAJAP,EAAQb,EAAkBc,GAAaZ,MACnCtK,EAAK0L,MAAQR,IACbD,GAAS,MAENA,EA9C6C,MAiD1BhL,IAAMC,SAAmB,GAjDC,mBAiDjDyL,EAjDiD,KAiDxCC,EAjDwC,OAkD1B3L,IAAMC,UAAkB,GAlDE,mBAkDjD2L,EAlDiD,KAkDxCC,EAlDwC,KAoDxDvK,OAAOwK,iBAAiB,eAAe,kBAAMD,GAAW,MACxDvK,OAAOwK,iBAAiB,cAAc,kBAAMD,GAAW,MAEvD,IAAME,EAAYC,YAAcC,IAAQ,CACpCC,SAAU,WASd,SAASC,IACL,OAAQ,eAACjK,EAAA,EAAD,CAAMC,MAAI,EAAC6C,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,UACJ,cAACxB,EAAA,EAAD,CAAYC,QAAS,YAAayI,UAAW,SAA7C,SACI,iCAASrM,EAAKsI,UAElB,cAACgE,EAAA,EAAD,CACIrB,MAAOjL,EAAK0L,MACZa,UAAW,GACXC,UAAQ,EACRC,KAAMZ,EAAU,SAAW,QAC3Ba,IAAK,OAgCjB,OA9CAC,qBAAU,WACNf,EAAWI,EAAY,EAAI,MAC5B,CAACA,IA6CA,qCACI,cAAC/J,EAAA,EAAD,CAAKC,aAAa,OAAOgB,QAAS,WAAlC,SACM8I,EAAYI,IA5BlB,qCACI,cAACjK,EAAA,EAAD,CAAMC,MAAI,EAAC6C,GAAI0G,EAASzG,GAAI,EAAGC,GAAI,EAAnC,SACA,cAACxB,EAAA,EAAD,CAAY0I,UAAU,SAASzI,QAAQ,YAAvC,SACI,iCAAS5D,EAAKsI,YAIlB,cAACnG,EAAA,EAAD,CAAMC,MAAI,EAAC6C,GAAI0G,EAASzG,IAAE,EAACC,IAAE,EAA7B,SACI,cAACmH,EAAA,EAAD,CACIhN,KAAMU,EAAKsI,MACX2C,MAAOjL,EAAK0L,MACZa,UAAW,GACXC,UAAQ,EACRC,KAAK,QACLC,IAAK,MAGb,cAAC/C,EAAA,EAAD,CAAQiD,QAAQ,EAAhB,SACI,cAACzK,EAAA,EAAD,CAAMC,MAAI,EAAC8C,IAAE,EAACC,IAAE,EAACC,IAAE,EAACC,IAAE,EAAChD,MAAO,CAAC+D,UAAW,SAA1C,SACI,cAACzC,EAAA,EAAD,CAAYC,QAAQ,UAApB,SAA+BoH,eAW3C,cAAC/I,EAAA,EAAD,CAAKC,aAAc,WAAYgB,QAAS,OAAxC,SACMkJ,SC9GH,SAASS,EAAkBC,GACtC,QAAoChE,IAAhCgE,EAAcA,cACd,OAAO,6BAGX,IAAMC,EAAQD,EAAc7N,KAEtB6N,EAAcA,cACf7N,MAAK,SAACC,EAAEC,GACL,OAAOD,EAAEwM,MAAQvM,EAAEuM,OACZ,EACDxM,EAAEwM,QAAUvM,EAAEuM,OAASxM,EAAEoJ,MAAMlJ,cAAgBD,EAAEmJ,MAAMlJ,cACnD,GACC,KAPb0N,EAAcA,cAUpB,OACI,cAACzI,EAAD,CACImB,MAAM,SACNP,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EANR,SAQI,cAAClD,EAAA,EAAD,CAAMM,WAAS,EACT2E,UAAU,MACVxE,QAAQ,gBACRO,WAAW,SACbT,QAAS,EAJb,SAOQqK,EAAKxF,KAAI,SAACyF,EAAGC,GAAJ,OACD,cAAC9C,EAAD,CACI7B,MAAO0E,EAAE1E,MACToD,MAAOsB,EAAEtB,OACJuB,U,+BCzCtB,SAASC,EAAiBlN,GAkBrC,OACI,cAACmN,EAAA,EAAD,CAAU9K,MAAO,CAAC0C,QAAS,EAAGU,cAAe,OAA7C,SACI,eAACtD,EAAA,EAAD,CAAMM,WAAS,EAACL,MAAI,EAAC6C,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI3C,QAAS,EAAtE,UACI,cAACT,EAAA,EAAD,CAAKC,aAAa,OAAlB,SACI,cAACC,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAACL,EAAA,EAAD,CAAMqL,KAAMpN,EAAK+B,KAAMT,OAAQtB,EAAKsI,MAAO9C,MAAOxF,EAAKsI,MAAO+E,UAAU,OAAxE,cApBKvE,KAAb,OAAJ9I,QAAI,IAAJA,OAAA,EAAAA,EAAMgH,QACC,6BAGPhH,EAAKgH,QAAUhH,EAAKgH,OAAO5H,cAAcM,WAAW,QAC7C,cAACsH,EAAA,EAAD,CAAQC,IAAKjH,EAAKsI,MAAOpB,IAAKlH,EAAKgH,SACnChH,EAAKgH,QAAUhH,EAAKgH,OAAOpH,QAAU,EACrC,cAACoH,EAAA,EAAD,CAAQC,IAAKjH,EAAKsI,MAAlB,SAA0BtI,EAAKgH,SAC/BhH,EAAKgH,QAAUhH,EAAKgH,OAAOpH,OAAS,EACpC,cAACoH,EAAA,EAAD,CAAQC,IAAKjH,EAAKsI,MAAlB,SAA0BjJ,EAAaW,EAAKgH,UAE5C,cAACA,EAAA,EAAD,CAAQC,IAAKjH,EAAKsI,MAAlB,SAA0BtI,EAAKsI,MAAM,WAcxC,eAACnG,EAAA,EAAD,CAAMC,MAAI,EAAC6C,IAAE,EAACC,IAAE,EAACC,IAAE,EAACC,IAAE,EAACC,IAAE,EAAzB,UACI,cAAC1B,EAAA,EAAD,CAAYC,QAAS,YAArB,SAAkC,iCAAS5D,EAAKsI,UAChD,cAAC3E,EAAA,EAAD,CAAYC,QAAS,YAAaiC,MAAM,gBAAxC,SAAyD7F,EAAK6I,sBC1BnE,SAASyE,EAAoBtN,GAAiC,IAAD,EACpDC,IAAMC,SAAmB,IAD2B,mBACjE+E,EADiE,KAC7DsI,EAD6D,KAUxE,OARAhM,OAAOwK,iBAAiB,eAAe,WACnCwB,EAAM,MAGVhM,OAAOwK,iBAAiB,cAAc,WAClCwB,EAAM,YAGiBzE,IAAvB9I,EAAKwN,cACE,6BAIP,cAACnJ,EAAD,CACImB,MAAM,iBACNP,GAAIA,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EANR,SAQI,cAAClD,EAAA,EAAD,CAAMM,WAAS,EAACL,MAAI,EAACM,QAAS,EAAGL,MAAO,CACpCa,QAAS,YADb,SAGA,cAACuK,EAAA,EAAD,CAAMpL,MAAO,CAAC0C,QAAS,GAAvB,SACK/E,EAAKwN,cAAcjG,KAAI,SAACmG,EAAGT,GACxB,OAAO,cAACC,EAAD,CAEH5E,MAAOoF,EAAEpF,MACTO,YAAa6E,EAAE7E,YACf8E,aAAcD,EAAEC,aAChB5L,KAAM2L,EAAE3L,KACRiF,OAAQ0G,EAAE1G,QALLiG,Y,gCCrCRW,GASjB,WAAmBC,GAAiC,yBARpDlH,eAQmD,OAPnDC,gBAOmD,OANnDE,cAMmD,OALnDwB,WAKmD,OAJnDZ,WAImD,OAHnDP,cAGmD,OAFnDG,QAAgC,IAAI3H,MAA0B,GAG1Db,OAAOgP,OAAOC,KAAMF,ICJPG,GASjB,WAAYC,GAAY,yBARxBC,aAA+B,IAAIN,GAAe,CAC9CtG,QAAS,IAAI3H,MAA0B,KAOpB,KALvBsJ,WAAmC,IAAItJ,MAA8B,GAK9C,KAJvBwO,UAA8B,IAAIxO,MAAsB,GAIjC,KAHvByO,cAAoC,IAAIzO,MAAwB,GAGzC,KAFvB0O,eAAsC,IAAI1O,MAAyB,GAG/Db,OAAOgP,OAAOC,KAAME,I,SCdPK,G,WAIjB,WAAYC,GAAc,yBAF1BC,aAEyB,EACrBT,KAAKS,QAAUD,E,uCAGnB,WACI,OAAOE,KACFC,IADE,UACaX,KAAKS,QADlB,YAC6BG,KAAKC,MAAMC,KAAKC,MAAQ,OACvDjN,MAAK,SAAAkN,GACF,GAAiB,MAAbA,EAAEC,OAAe,CACjB,IAAMC,EAAMC,KAAKC,KAAKJ,EAAEK,MACxB,OAAO,IAAIpB,GAAUiB,OAE1BI,OAAM,SAAA3B,GAEL,OADA4B,QAAQC,IAAI7B,GACLA,S,KCJjB8B,GACAC,IAGAC,GAAK,IAAIpB,GAAW,mGAEpBqB,GAGF,WAAY9B,GAA2B,yBAFvC+B,QAAkB,EAEoB,KADtCC,UAAuB,IAAI7B,GAEvBlP,OAAOgP,OAAOC,KAAMF,IAoGbiC,OAhGf,WACI,IAAMC,EAAkB9D,YAAc,gCAChC1H,EAAQiL,GAAY,CACV1J,QAAS,CACL5E,KAAM6O,EAAkB,OAAS,WAIrDxO,OAAOwK,iBAAiB,eAAe,SAASV,GAC5CA,EAAEtK,mBACH,CAACiP,SAAS,IAEbzO,OAAOwK,iBAAiB,aAAa,SAASV,GAC1CA,EAAEtK,mBACH,CAACiP,SAAS,IAEbzO,OAAOwK,iBAAiB,WAAW,SAASV,GACxCA,EAAEtK,mBACH,CAACiP,SAAS,IAlBF,MAoBe9P,mBAAmB,IAAIyP,IApBtC,mBAoBJM,EApBI,KAoBGC,EApBH,KAgCP,OAXJvD,qBAAU,WACN+C,GAAGS,MAAMtO,MACD,SAAAkN,GACImB,EAAS,IAAIP,GAAS,CAClBE,UAAWd,EACXa,QAAQ,UAIzB,IAGMK,EAAML,OACP,cAAC,IAAD,UACI,eAAC,IAAD,CAAkBrL,MAAOA,EAAzB,UACI,cAAC6L,EAAA,EAAD,IACA,eAAC,IAAD,WACI,0CAAWH,EAAMJ,UAAU3B,aAAavH,UAAxC,YAAqDsJ,EAAMJ,UAAU3B,aAAapH,SAAlF,cAAgGmJ,EAAMJ,UAAU3B,aAAa5F,SAC7H,sBACIhJ,KAAK,WACL+Q,QAAQ,yDAEZ,sBACIC,IAAI,aACJlD,KAAK,gFAET,sBACIkD,IAAI,aACJlD,KAAK,+DAKL,cAAC1H,EAAA,EAAD,CACIyG,SAAS,KACT9J,MAAO,CACHC,OAAQ,WAHhB,SAOI,eAACH,EAAA,EAAD,CACIM,WAAS,EAACL,MAAI,EACdgF,UAAU,MACVxE,QAAQ,aACRO,WAAW,UAJf,UAMI,cAAC6C,EAAD,CACIhG,KAAMiQ,EAAMJ,UAAU3B,eAG1B,cAACjF,EAAD,CACIE,UAAW8G,EAAMJ,UAAU5G,aAG/B,cAACe,EAAD,CACIC,UAAWgG,EAAMJ,UAAU1B,YAG/B,cAACtB,EAAD,CACIC,cAAemD,EAAMJ,UAAUzB,cAC/BnP,MAAM,IAGV,cAACqO,EAAD,CACIE,cAAeyC,EAAMJ,UAAUxB,2BApD3C,8BCnDbkC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5O,MAAK,YAAkD,IAA/C6O,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCHdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAENC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.72fe8777.chunk.js","sourcesContent":["import React, {Suspense} from \"react\";\nimport * as eyeCons from \"@material-ui/icons\";\n\nconst eyeConsKVP = Object\n    .entries(eyeCons)\n    .sort((a,b) =>{\n        return a[0].toLowerCase() > b[0].toLowerCase()\n            ? 1\n            : -1;\n});\n\nexport default function GenerateIcon(name: any) {\n    const match = eyeConsKVP.filter((itm) => {\n        return itm[0].toLowerCase().startsWith(name?.toLowerCase() ?? \"\")\n    }) ?? new Array<any>();\n\n    if ((match?.length ?? 0) === 0) {\n        return (<button>{name}</button>);\n    }\n\n    const GeneratedIcon = match[0][1];\n\n    return (\n        <Suspense fallback={<span>loading...</span>}>\n            <GeneratedIcon />\n        </Suspense>\n    );\n}","import React from \"react\";\nimport {Box, ButtonBase, Grid, Popover, Snackbar, Typography} from \"@material-ui/core\";\nimport GenerateIcon from \"../Misc/GeneratedIconElement\";\nimport ContactMethodModel from \"./Models/ContactMethodModel\";\n\nexport default function ContactMethod(info: ContactMethodModel) {\n    const [eventTimer, setEventTimer] = React.useState<NodeJS.Timeout | null>(null);\n    const [showFull, setShowFull] = React.useState(false);\n    const [snackType, setSnackType] = React.useState<string | null>(null)\n    const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n\n    let openSnack = Boolean(snackType !== null);\n\n    const handleTrigger = (event: any) => {\n        event.preventDefault();\n\n        // copy local so we can do checks on og value\n        const show = showFull;\n\n        // every click should reset timer\n        if (eventTimer) {\n            clearTimeout(eventTimer);\n            setEventTimer(null);\n            setShowFull(false);\n            setAnchorEl(null);\n        }\n\n        // our work is done here, leaving doesn't nav\n        // and leaving will have already hidden the text\n        if (event.type === \"pointerleave\"){\n            return;\n        }\n\n        const triggered = Boolean(event && (\n            event.type === \"mousedown\" ||\n            event.type === \"pointerdown\"));\n\n        if (triggered && !show) {\n            // set timer if triggering event\n            // and we're not already showing the thing\n            setEventTimer(setTimeout(() => {\n                setAnchorEl(event.currentTarget ?? event.target);\n                setShowFull(true);\n                if(window.isSecureContext){\n                    navigator.clipboard.writeText(info.ClipboardText)\n                        .then(function() {\n                            setSnackType(\"success\");\n                        }, function() {\n                            setSnackType(\"warning\");\n                        });\n                } else {\n                    setSnackType(\"warning\");\n                }\n\n\n            }, 333));\n        } else if (!triggered && !show) {\n            // if we're an anti-trigger and we're not showing\n            // we must be ready to navigate\n            window.open(info.Link, info.MethodName);\n        }\n    }\n\n    return (\n        <>\n            <Box displayPrint=\"none\">\n                <Grid item\n                      style={{\n                          cursor:\"pointer\",\n                          userSelect:\"none\",\n                          msUserSelect:\"none\"\n                      }}\n                >\n                    <Grid\n                        container\n                        spacing={1}\n                        alignContent=\"center\"\n                        justify=\"center\"\n                        onMouseDown={handleTrigger}\n                        onMouseUp={handleTrigger}\n                        onPointerDown={handleTrigger}\n                        onPointerUp={handleTrigger}\n                        onPointerLeave={handleTrigger}>\n                        <Grid item style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            flexWrap: \"wrap\"\n                        }}>\n                            <ButtonBase>{GenerateIcon(info.Icon)}</ButtonBase>\n\n                            <Popover\n                                open={showFull}\n                                anchorEl={anchorEl}\n                                transformOrigin={{\n                                    vertical: 50,\n                                    horizontal: 0\n                                }}\n                            >\n                                <Typography\n                                    variant=\"overline\"\n                                    style={{\n                                        margin: \"1em\",\n                                        cursor: \"pointer\"\n                                    }}\n                                >\n                                    {info.DisplayText}\n                                </Typography>\n                            </Popover>\n\n                        </Grid>\n                    </Grid>\n                    <Snackbar\n                        anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}\n                        open={openSnack}\n                        message={(snackType === \"success\" && openSnack\n                            ? \"Contact information copied to clipboard.\"\n                            : snackType === \"warning\" && openSnack\n                                ? \"Unable to copy contact information to clipboard.\"\n                                : null)}\n                        key={info.MethodName}\n                        autoHideDuration={600}\n                        onClose={() => {\n                            setTimeout(() => setSnackType(null), 600)\n                        }}\n                    />\n                </Grid>\n            </Box>\n            <Box display=\"none\" displayPrint=\"block\">\n                <Grid container item style={{paddingRight: \"1.0em\"}}>\n                    <Grid item style={{paddingRight: \"0.25em\"}}>\n                    {GenerateIcon(info.Icon)}\n                    </Grid>\n                    <Grid item style={{paddingRight: \"1.0em\"}}>\n                        <Typography>{info.DisplayText}</Typography>\n                    </Grid>\n                </Grid>\n\n            </Box>\n        </>\n    );\n}","import React from \"react\";\nimport {Box, Container, ContainerProps, Grid, GridSize, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport {useTheme} from \"@material-ui/core\";\n\nexport class SectionProps {\n    title?: string;\n    xs?: GridSize;\n    sm?: GridSize;\n    md?: GridSize;\n    lg?: GridSize;\n    xl?: GridSize;\n}\n\nexport default function Section(props: SectionProps & React.PropsWithChildren<ContainerProps>) {\n    const theme = useTheme();\n    const styles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n            overflow: 'hidden',\n        },\n        padded100: {\n            padding: `${theme.spacing(1)}px`,\n            height: \"100%\"\n        }\n    }))();\n\n    return (\n        <Grid item\n              xs={props.xs || \"auto\"}\n              sm={props.sm || \"auto\"}\n              md={props.md || \"auto\"}\n              lg={props.lg || \"auto\"}\n              xl={props.xl || \"auto\"}\n        >\n            <Box displayPrint=\"none\" className={styles.padded100}>\n                <Paper className={styles.padded100}>\n                    {(props.title) &&\n                        <Typography\n                            variant=\"h4\"\n                            style={{\n                                flexGrow: 1,\n                                paddingBottom: \"0.25em\"\n                            }}\n                        >\n                            {props.title}\n                        </Typography>\n                    }\n                    <Container>{props.children}</Container>\n                </Paper>\n            </Box>\n            <Box\n                display=\"none\"\n                displayPrint=\"block\"\n            >\n                    <Box pl=\"1em\">\n                        <Typography\n                            variant=\"h4\"\n                            style={{\n                                color: theme.palette.info.dark,\n                                paddingBottom: \"0.25em\"\n                            }}\n                        >\n                        {props.title}\n                        </Typography>\n                        <Container>\n                            {props.children}\n                        </Container>\n                    </Box>\n            </Box>\n        </Grid>\n    )\n};","import React from \"react\";\nimport {Avatar, Box, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core\";\nimport BiographyModel from \"./Models/BiographyModel\";\nimport ContactMethod from \"./ContactMethod\";\nimport Section from \"../Misc/Section\";\nimport {useTheme} from \"@material-ui/core\";\n\nexport class BiographyInfo {\n    info!: BiographyModel;\n}\n\nexport default function Biography(props: BiographyInfo){\n    const theme = useTheme();\n    const styles = makeStyles((theme) => ({\n        large: {\n            width: theme.spacing(15),\n            height: theme.spacing(15),\n            margin: \"auto\",\n            marginTop: \"-50px\"\n        },\n        name: {\n            textAlign: \"center\",\n            textTransform: \"uppercase\",\n        },\n        blurb: {\n            padding: \"1em\",\n            fontStyle: \"italic\",\n            fontSize: \"smaller\",\n            textAlign: \"center\"\n        },\n        contact: {\n            display: 'flex',\n            '& > *': {\n                margin: theme.spacing(1),\n            }\n        }\n    }))();\n\n    function getFullName():string {\n        return `${props.info.FirstName} ${props.info.MiddleName}`.trim() +\n               ` ${props.info.LastName}`\n    }\n\n    return (\n        <>\n            <Box style={{paddingTop: \"35px\"}} displayPrint=\"none\">\n                <Section>\n                    <Grid\n                        container\n                        justify=\"center\"\n                    >\n                        <Grid\n                            item\n                            xs={12}\n                        >\n                            <Avatar\n                                alt={getFullName()}\n                                src={props.info.PhotoUrl}\n                                className={styles.large}/>\n                        </Grid>\n                        <Grid\n                            item\n                            xs={12}\n                            className={styles.name}\n                        >\n                            <Typography\n                                variant=\"h3\"\n                            >{getFullName()}</Typography>\n                        </Grid>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignContent=\"center\"\n                            className={styles.contact}\n                        >\n                            {  Array.isArray(props.info.Contact) &&\n                                props.info.Contact.map((contact, index) => {\n                                return (\n                                    <ContactMethod\n                                        key={index.toString()}\n                                        Link={contact.Link}\n                                        MethodName={contact.MethodName}\n                                        DisplayText={contact.DisplayText}\n                                        Icon={contact.Icon}\n                                        ClipboardText={contact.ClipboardText}\n                                        />\n                                );\n                            })}\n                        </Grid>\n                        <Grid\n                            item\n                            className={styles.blurb}\n                        >\n                            <Typography>{props.info.Blurb}</Typography>\n                        </Grid>\n                    </Grid>\n                </Section>\n            </Box>\n            <Box\n                 id=\"me\"\n                 display=\"none\"\n                 displayPrint=\"block\"\n            >\n                <Grid container>\n                    <Grid item xs={12} md={12}>\n                        <Typography\n                            variant=\"h3\"\n                            style={{color: theme.palette.info.dark}}>\n                            {getFullName().toUpperCase()}\n                        </Typography>\n                    </Grid>\n                    <Grid container item xs={12} md={12}>\n                        {   Array.isArray(props.info.Contact) &&\n                            props.info.Contact.map((contact, index) => {\n                            return (\n                                <ContactMethod\n                                    key={index.toString()}\n                                    Link={contact.Link}\n                                    MethodName={contact.MethodName}\n                                    DisplayText={contact.DisplayText}\n                                    Icon={contact.Icon}\n                                    ClipboardText={contact.ClipboardText}\n                                />\n                            );\n                        })}\n                    </Grid>\n                </Grid>\n                <Divider/>\n            </Box>\n        </>\n    );\n}","import {Box, Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport IExperienceRole from \"./interfaces/IExperienceRole\";\n\nexport default function ExperiencePosition(props: IExperienceRole) {\n    const styles = makeStyles((theme) => ({\n        root: {\n        },\n        duration: {\n            textAlign: \"right\",\n            [theme.breakpoints.down('xs')]: {\n                textAlign: \"left\",\n                //fontSize: \"smaller\",\n            }\n        }\n    }))();\n\n    const listItems = new Array<string>();\n\n    if (Array.isArray(props.Duties)){\n        listItems.push(...props.Duties);\n    }\n    if (Array.isArray(props.Achievements)){\n        listItems.push(...props.Achievements);\n    }\n\n    return (\n        <><div>\n            <Grid item container xs={12} sm={12} md={12} lg={12} xl={12} >\n                <Box displayPrint=\"none\" display=\"contents\" style={{width: \"100%\"}}>\n                    <Grid item md={8} sm={6} xs={12}>\n                        <Typography variant=\"subtitle1\"><strong>{props.Title}</strong></Typography>\n                    </Grid>\n                    <Grid item md={4} sm={6} xs={12}>\n                        <Typography variant=\"subtitle2\" className={styles.duration}>{props.From} - {props.To}</Typography>\n                    </Grid>\n                </Box>\n                <Box displayPrint=\"contents\" display=\"none\">\n                    <Grid item xs={6}>\n                            <Typography variant=\"subtitle1\">\n                                <strong>{props.Title}</strong>\n                            </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                            <Typography variant=\"subtitle2\" style={{textAlign:\"right\"}}>\n                                {props.From} - {props.To}\n                            </Typography>\n                    </Grid>\n                </Box>\n            </Grid>\n            {\n                props?.Notes?.trim()?.length > 0 &&\n                <Grid item sm={12} xs={12} >\n                    <Typography variant=\"subtitle2\" style={{fontSize: \"smaller\"}}>\n                        {props.Notes}\n                    </Typography>\n                </Grid>\n            }\n            { listItems && listItems.length > 0 &&\n            <Grid item xs={12}>\n                <Typography\n                    variant=\"body2\">\n                <ul style={{marginTop: \"0.25em\", marginBottom: \"0.5em\"}}\n                >\n                    {listItems.map((item, index) => {\n                        return <li key={index}>{item}</li>\n                    })}\n                </ul>\n                </Typography>\n            </Grid>\n            }\n        </div></>\n    )\n}","import {Grid, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport IExperienceCompany from \"./interfaces/IExperienceCompany\";\nimport ExperiencePosition from \"./ExperiencePosition\";\n\nexport default function ExperienceCompany(props: IExperienceCompany) {\n    return (\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n            <Typography variant=\"h6\">{props.CompanyName}</Typography>\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">{props.Description}</Typography>\n            {   props.Roles !== undefined &&\n                props.Roles.map(((pos, index) => {\n                    return (\n\n                        <ExperiencePosition key={index}\n                                            Title={pos.Title}\n                                            From={pos.From}\n                                            To={pos.To}\n                                            Duties={pos.Duties}\n                                            Achievements={pos.Achievements}\n                                            Notes={pos.Notes}\n                        />)\n                }))\n            }\n        </Grid>\n    )\n}","import React from \"react\"\nimport IExperienceCompany from \"./interfaces/IExperienceCompany\";\nimport ExperienceCompany from \"./ExperienceCompany\";\nimport Section from \"../Misc/Section\";\n\nexport class ExperienceModel {\n    companies!: Array<IExperienceCompany> | undefined\n}\n\nexport default function Experience(history: ExperienceModel) {\n    if (history.companies === undefined){\n        return <></>\n    }\n\n    return (\n            <Section\n                title=\"Experience\"\n                xs={12} sm={12} md={12} lg={12} xl={12}\n            >\n                {history.companies.map((company, index) => {\n                        return (\n                            <ExperienceCompany\n                            key={index}\n                            Description={company.Description}\n                            CompanyName={company.CompanyName}\n                            Roles={company.Roles}/>\n                        )}\n                )}\n            </Section>\n    );\n}","import React from \"react\";\nimport EducationModel from \"./Models/EducationModel\";\nimport {Grid, Hidden, makeStyles, Typography} from \"@material-ui/core\";\n\nexport default function EducationMilestone(info: EducationModel){\n    const styles = makeStyles(() => ({\n        root: {\n        },\n        duration: {\n            textAlign: \"right\"\n        }\n    }))();\n\n    function getDateRange() {\n        let dr = \"\";\n        const hasFrom = Boolean(info.From && String(info.From).trim().length > 0);\n        const hasTo = Boolean(info.To && String(info.To).trim().length > 0);\n\n        if (hasFrom) {\n            dr = info?.From ?? \"\";\n        }\n\n        if (hasFrom && hasTo){\n            dr += \" - \";\n        }\n\n        if (hasTo){\n            dr += info?.To ?? \"\";\n        }\n\n        return dr;\n    }\n\n    return (\n        <Grid container>\n            <Grid item md={10} sm={10} xs={12}>\n                <Typography variant=\"subtitle1\"><strong>{info.Title}</strong></Typography>\n            </Grid>\n            <Hidden xsDown={true}>\n                <Grid item md={2} sm={2}>\n                    <Typography variant=\"subtitle2\" className={styles.duration}>{getDateRange()}</Typography>\n                </Grid>\n            </Hidden>\n            <Grid item md={12} xs={8}>\n                <Typography variant=\"body2\">{info.Authority}</Typography>\n            </Grid>\n            <Hidden smUp={true}>\n                <Grid item xs={4}>\n                    <Typography  variant=\"body2\" className={styles.duration}>{getDateRange()}\n                    </Typography>\n                </Grid>\n            </Hidden>\n            <Grid item md={12} sm={12} xs={12}>\n                <Typography><span style={{fontSize: \"smaller\"}}>{info.Text}</span></Typography>\n            </Grid>\n        </Grid>\n    )\n}","import React from \"react\";\nimport EducationModel from \"./Models/EducationModel\";\nimport EducationMilestone from \"./EducationMilestone\";\nimport Section from \"../Misc/Section\";\n\n\nclass EducationHistoryModel {\n    education!: Array<EducationModel> | undefined\n}\n\nexport default function EducationHistory(education: EducationHistoryModel) {\n    if (education.education === undefined){\n        return <></>\n    }\n\n    return (\n        <Section\n            title=\"Education\"\n            xs={12} sm={12} md={12} lg={12} xl={12}\n        >\n            {education.education.map((edu, index) => {\n                return (<EducationMilestone\n                    key={index}\n                    Authority={edu.Authority}\n                    From={edu.From}\n                    To={edu.To}\n                    Title={edu.Title}\n                    Text={edu.Text}\n                />)\n            })}\n        </Section>\n    );\n}","import React, {useEffect} from \"react\";\nimport {Rating} from \"@material-ui/lab\"\nimport ProficiencyModel from \"./Models/ProficiencyModel\";\nimport {Box, Grid, GridSize, Hidden, Typography, useMediaQuery} from \"@material-ui/core\";\nimport {useTheme} from \"@material-ui/core\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport json2mq from \"json2mq\";\n\nexport default function Proficiency(info: ProficiencyModel) {\n    const theme = useTheme();\n\n    const proficiencyLabels: { [index: number]: any } = {\n        0.5: {\n            label: 'Novice',\n            backgroundColor: grey[50],\n            color: theme.palette.primary\n        },\n        1.5: {\n            label: 'Beginner',\n            backgroundColor: theme.palette.secondary.light,\n        },\n        2.5: {\n            label: 'Competent',\n            backgroundColor: theme.palette.secondary.dark,\n        },\n        3.5: {\n            label: 'Proficient',\n            backgroundColor: theme.palette.primary.light,\n        },\n        4.5: {\n            label: 'Expert',\n            backgroundColor: theme.palette.primary.dark,\n        }\n    };\n\n    function getClosetValue(): number {\n        const keys = Array.from(Object.keys(proficiencyLabels), (e) => {\n            return Number(e)\n        }).sort();\n\n        return keys.reduce((pv, cv) => {\n            return info.Level >= cv\n                ? cv\n                : pv;\n        });\n    }\n\n    function getLabel(): string {\n        let value: string;\n        const closetValue = getClosetValue();\n        value = proficiencyLabels[closetValue].label;\n        if (info.Level > closetValue){\n            value += \"++\";\n        }\n        return value;\n    }\n\n    const [xsValue, setXsValue] = React.useState<GridSize>(6);\n    const [isPrint, setIsPrint] = React.useState<boolean>(false);\n\n    window.addEventListener(\"beforeprint\", () => setIsPrint(true));\n    window.addEventListener(\"afterprint\", () => setIsPrint(false));\n\n    const specialXs = useMediaQuery(json2mq({\n        maxWidth: \"800px\"\n    }))\n\n\n\n    useEffect(() => {\n        setXsValue(specialXs ? 6 : 12)\n    }, [specialXs])\n\n    function inline(){\n        return (<Grid item xs={6} sm={6} md={6}>\n            <Typography variant={\"subtitle1\"} component={\"legend\"}>\n                <strong>{info.Title}</strong>\n            </Typography>\n            <Rating\n                value={info.Level}\n                precision={0.5}\n                readOnly\n                size={isPrint ? \"medium\" : \"small\"}\n                max={5}\n            />\n        </Grid>);\n    }\n\n    function regular(){\n        return (\n            <>\n                <Grid item xs={xsValue} sm={8} md={6}>\n                <Typography component=\"legend\" variant=\"subtitle1\">\n                    <strong>{info.Title}</strong>\n\n                </Typography>\n                </Grid>\n                <Grid item xs={xsValue} sm md>\n                    <Rating\n                        name={info.Title}\n                        value={info.Level}\n                        precision={0.5}\n                        readOnly\n                        size=\"small\"\n                        max={5}\n                    />\n                </Grid>\n                <Hidden smDown={true}>\n                    <Grid item sm md lg xl style={{textAlign: \"right\"}}>\n                        <Typography variant=\"caption\">{getLabel()}</Typography>\n                    </Grid>\n                </Hidden>\n            </>);\n    }\n\n    return (\n        <>\n            <Box displayPrint=\"none\" display={\"contents\"}>\n                { specialXs ? inline() : regular()}\n            </Box>\n            <Box displayPrint={\"contents\"} display={\"none\"}>\n                { inline() }\n            </Box>\n        </>\n    )\n}","import React from \"react\";\nimport Proficiency from \"./Proficiency\";\nimport ProficiencyModel from \"./Models/ProficiencyModel\";\nimport {Grid} from \"@material-ui/core\";\nimport Section from \"../Misc/Section\";\n\nexport class TechnologySummaryParameter {\n    proficiencies!: Array<ProficiencyModel> | undefined;\n    sort?: boolean = false;\n}\n\nexport default function TechnologySummary(proficiencies: TechnologySummaryParameter) {\n    if (proficiencies.proficiencies === undefined){\n        return <></>\n    }\n\n    const prof = !proficiencies.sort\n        ? proficiencies.proficiencies\n        : proficiencies.proficiencies\n        .sort((a,b) => {\n            return a.Level > b.Level\n                ? -1\n                : a.Level === b.Level && a.Title.toLowerCase() > b.Title.toLowerCase()\n                    ? 1\n                    : -1;\n        });\n\n    return (\n        <Section\n            title=\"Skills\"\n            xs={12}\n            sm={6}\n            md={6}\n            lg={6}\n            xl={6}\n        >\n            <Grid container\n                  direction=\"row\"\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                spacing={1}\n            >\n                {\n                    prof.map((p, i) =>\n                            <Proficiency\n                                Title={p.Title}\n                                Level={p.Level}\n                                key={i} />\n                    )\n                }\n            </Grid>\n        </Section>\n    )\n}","import GenerateIcon from \"../Misc/GeneratedIconElement\";\nimport React from \"react\";\nimport {Avatar, Box, Grid, Link, ListItem, Typography} from \"@material-ui/core\";\nimport ContributionModel from \"./Models/ContributionModel\";\n\n\nexport default function ContributionItem(info: ContributionModel){\n\n    function getAvatar() {\n        if (info?.Avatar === undefined){\n            return <></>\n        }\n\n        if (info.Avatar && info.Avatar.toLowerCase().startsWith(\"http\")){\n            return <Avatar alt={info.Title} src={info.Avatar}/>\n        } else if (info.Avatar && info.Avatar.length <= 2) {\n            return <Avatar alt={info.Title}>{info.Avatar}</Avatar>\n        } else if (info.Avatar && info.Avatar.length > 0) {\n            return <Avatar alt={info.Title}>{GenerateIcon(info.Avatar)}</Avatar>\n        } else {\n            return <Avatar alt={info.Title}>{info.Title[0]}</Avatar>\n        }\n    }\n\n    return (\n        <ListItem style={{padding: 0, paddingBottom: \"1em\"}}>\n            <Grid container item xs={12} sm={12} md={12} lg={12} xl={12} spacing={2}>\n                <Box displayPrint=\"none\">\n                    <Grid item>\n                        <Link href={info.Link} target={info.Title} title={info.Title} underline=\"none\">\n                            {getAvatar()}\n                        </Link>\n                    </Grid>\n                </Box>\n                <Grid item xs sm md lg xl>\n                    <Typography variant={\"subtitle1\"}><strong>{info.Title}</strong></Typography>\n                    <Typography variant={\"subtitle2\"} color=\"textSecondary\">{info.Description}</Typography>\n                </Grid>\n            </Grid>\n        </ListItem>\n    );\n}","import React from \"react\";\nimport {Grid, GridSize, List} from \"@material-ui/core\";\nimport ContributionModel from \"./Models/ContributionModel\";\nimport ContributionItem from \"./ContributionItem\";\nimport Section from \"../Misc/Section\";\n\nexport class ContributionSummaryProps {\n    contributions!: Array<ContributionModel> | undefined;\n}\n\nexport default function ContributionSummary(info: ContributionSummaryProps) {\n    const [xs, setXs] = React.useState<GridSize>(12);\n    window.addEventListener(\"beforeprint\", ()=>{\n        setXs(6);\n    });\n\n    window.addEventListener(\"afterprint\", () => {\n        setXs(12);\n    })\n\n    if (info.contributions === undefined) {\n        return <></>\n    }\n\n    return (\n        <Section\n            title=\"Certifications\"\n            xs={xs}\n            sm={6}\n            md={6}\n            lg={6}\n            xl={6}\n        >\n            <Grid container item spacing={1} style={{\n                display: \"contents\",\n            }}>\n            <List style={{padding: 0}}>\n                {info.contributions.map((c, i) => {\n                    return <ContributionItem\n                        key={i}\n                        Title={c.Title}\n                        Description={c.Description}\n                        Contribution={c.Contribution}\n                        Link={c.Link}\n                        Avatar={c.Avatar}\n                        />\n                })}\n            </List>\n        </Grid>\n        </Section>\n    )\n}","import ContactMethodModel from \"./ContactMethodModel\";\n\nexport default class BiographyModel {\n    FirstName!: string;\n    MiddleName!: string;\n    LastName!: string;\n    Title!: string;\n    Blurb!: string;\n    PhotoUrl!: string;\n    Contact: ContactMethodModel[] = new Array<ContactMethodModel>(0);\n\n    public constructor(init?: Partial<BiographyModel>) {\n        Object.assign(this, init);\n    }\n}","import BiographyModel from \"../components/Demographics/Models/BiographyModel\";\nimport IExperienceCompany from \"../components/Experience/interfaces/IExperienceCompany\";\nimport EducationModel from \"../components/Education/Models/EducationModel\";\nimport ProficiencyModel from \"../components/Technology/Models/ProficiencyModel\";\nimport ContributionModel from \"../components/Contribution/Models/ContributionModel\";\nimport ExperienceCompanyModel from \"../components/Experience/Models/ExperienceCompanyModel\";\nimport ContactMethodModel from \"../components/Demographics/Models/ContactMethodModel\";\n\nexport default class DataModel {\n    Demographics: BiographyModel = new BiographyModel({\n        Contact: new Array<ContactMethodModel>(0)\n    });\n    Experience: IExperienceCompany[] = new Array<ExperienceCompanyModel>(0);\n    Education: EducationModel[] = new Array<EducationModel>(0);\n    Proficiencies: ProficiencyModel[] = new Array<ProficiencyModel>(0);\n    Certifications: ContributionModel[] = new Array<ContributionModel>(0);\n\n    constructor(obj?: any) {\n        Object.assign(this, obj);\n    }\n}","import axios from \"axios\";\nimport DataModel from \"./DataModel\";\nimport yaml from \"js-yaml\"\n\nexport default class DataGetter {\n\n    dataUrl: string;\n\n    constructor(url: string) {\n        this.dataUrl = url;\n    }\n\n    Get(): Promise<DataModel> {\n        return axios\n            .get<string>(`${this.dataUrl}?${Math.round(Date.now() / 1000)}`)\n            .then(x => {\n                if (x.status === 200){\n                    const doc = yaml.load(x.data);\n                    return new DataModel(doc);\n                }\n            }).catch(c => {\n                console.log(c);\n                return c;\n            });\n    }\n}","import React, {useEffect, useState} from 'react';\nimport Biography from \"./components/Demographics/Biography\"\nimport Experience from \"./components/Experience/Experience\";\nimport {\n    Container,\n    createMuiTheme,\n    CssBaseline, Grid,\n    MuiThemeProvider,\n    unstable_createMuiStrictModeTheme,\n    useMediaQuery\n} from \"@material-ui/core\";\nimport {Helmet, HelmetProvider} from 'react-helmet-async';\nimport EducationHistory from \"./components/Education/EducationHistory\";\nimport TechnologySummary from \"./components/Technology/TechnologySummary\";\nimport ContributionSummary from \"./components/Contribution/ContributionSummary\";\nimport DataGetter from \"./data/DataGetter\";\nimport DataModel from \"./data/DataModel\";\n\nconst createTheme = process.env.NODE_ENV === 'production'\n    ? createMuiTheme\n    : unstable_createMuiStrictModeTheme;\n\nconst dg = new DataGetter(\"https://gist.githubusercontent.com/MeganParson/7513b9217a1d1f0c8f967ed8bd04af1b/raw/resume.yaml\");\n\nclass appProps {\n    loaded: boolean = false;\n    dataModel: DataModel = new DataModel();\n    constructor(init?: Partial<appProps>) {\n        Object.assign(this, init);\n    }\n}\n\nfunction App() {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const theme = createTheme({\n                    palette: {\n                        type: prefersDarkMode ? 'dark' : 'light'\n                    }\n    });\n\n    window.addEventListener('contextmenu', function(e) {\n        e.preventDefault();\n    }, {passive: false});\n\n    window.addEventListener('mousedown', function(e) {\n        e.preventDefault();\n    }, {passive: false});\n\n    window.addEventListener('mouseup', function(e) {\n        e.preventDefault();\n    }, {passive: false});\n\n    const [state, setState] = useState<appProps>(new appProps());\n    useEffect(() => {\n        dg.Get().then(\n                x => {\n                    setState(new appProps({\n                        dataModel: x,\n                        loaded: true,\n                    }))\n                }\n            )\n    }, [])\n\n        return (\n            !state.loaded ? <></> :\n            <HelmetProvider>\n                <MuiThemeProvider theme={theme}>\n                    <CssBaseline/>\n                    <Helmet>\n                        <title>{`${state.dataModel.Demographics.FirstName} ${state.dataModel.Demographics.LastName} - ${state.dataModel.Demographics.Title}`}</title>\n                        <meta\n                            name=\"viewport\"\n                            content=\"minimum-scale=1, initial-scale=1, width=device-width\"\n                        />\n                        <link\n                            rel=\"stylesheet\"\n                            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n                        />\n                        <link\n                            rel=\"stylesheet\"\n                            href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n                        />\n                    </Helmet>\n                    {\n                        (\n                            <Container\n                                maxWidth=\"md\"\n                                style={{\n                                    cursor: \"default\"\n                                }}\n                            >\n                                {/*<WidthDebugger/>*/}\n                                <Grid\n                                    container item\n                                    direction=\"row\"\n                                    justify=\"flex-start\"\n                                    alignItems=\"stretch\"\n                                >\n                                    <Biography\n                                        info={state.dataModel.Demographics}\n                                    />\n\n                                    <Experience\n                                        companies={state.dataModel.Experience}\n                                    />\n\n                                    <EducationHistory\n                                        education={state.dataModel.Education}\n                                    />\n\n                                    <TechnologySummary\n                                        proficiencies={state.dataModel.Proficiencies}\n                                        sort={false}\n                                    />\n\n                                    <ContributionSummary\n                                        contributions={state.dataModel.Certifications}\n                                    />\n                                </Grid>\n                            </Container>\n                        )\n                    }\n                </MuiThemeProvider>\n            </HelmetProvider>\n        );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './print.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}